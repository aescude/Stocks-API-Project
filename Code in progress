<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Tracker</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; }
        
        button {
            font-size: 11px;
            letter-spacing: 1px;
            text-transform: uppercase;
            display: inline-block;
            text-align: center;
            font-weight: bold;
            padding: 0.7em 2em;
            border: 3px solid #ffffff;
            border-radius: 2px;
            position: relative;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16),
                        0 3px 6px rgba(0, 0, 0, 0.1);
            color: #ff0000;
            background-color: black;
            text-decoration: none;
            transition: 0.3s ease all;
            z-index: 1;
        }

        button:hover, button:focus { color: white; }
        button:active { transform: scale(0.95); }

        /* Make the canvas bigger */
        
    </style>
</head>
<body>
    <canvas id="chart" width="60" height="60"></canvas>
    <h1>Stock Tracker</h1>
    <label for="ticker">Enter Stock Ticker Symbol:</label>
    <input type="text" id="ticker" placeholder="e.g., AAPL">
    <button id="fetchStock">Submit</button>
    <p id="stockName"></p>
    <p id="stockPrice"></p>
    <canvas id="stockChart"></canvas>

    <script>
        const apiKey = '15533UVRKJJUXJ7U'; 
        const apiUrl = 'https://www.alphavantage.co/query';
        let stockChart;

        document.getElementById("fetchStock").onclick = async () => {
            const ticker = document.getElementById("ticker").value.trim().toUpperCase(); 

            if (!ticker) {
                console.log("Please enter a stock ticker symbol.");
                return;
            }

            const response = await fetch(`${apiUrl}?function=TIME_SERIES_INTRADAY&symbol=${encodeURIComponent(ticker)}&interval=5min&apikey=${apiKey}`);
            const data = await response.json();
            
            if (!data["Meta Data"]) {
                console.log(data);
                return;
            }

            const timeSeries = data["Time Series (5min)"];
            const labels = Object.keys(timeSeries).reverse(); 
            const prices = labels.map(time => parseFloat(timeSeries[time]["1. open"]));

            document.getElementById("stockName").textContent = 'Stock: ' + ticker;
            document.getElementById("stockPrice").textContent = 'Latest Price: $' + prices.at(-1).toFixed(2);

            
            const ctx = document.getElementById('stockChart').getContext('2d');
            stockChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `${ticker} Stock Price (5min interval)`,
                        data: prices,
                        borderColor: 'red',
                        backgroundColor: 'rgba(255, 0, 0, 0.2)',
                        borderWidth: 2,
                        tension: 0.2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: { title: { display: true, text: 'Time' } },
                        y: { title: { display: true, text: 'Stock Price ($)' }, beginAtZero: false }
                    }
                }
            });
        };
    </script>
</body>
</html>
